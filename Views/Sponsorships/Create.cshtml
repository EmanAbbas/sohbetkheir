@model Gam3iaWeb.Sponsorship

@{
    ViewBag.Title = "حالة كفالة جديده";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>حالة كفالة جديده</h2>
<div class="float_left">
    @Html.ActionLink("عودة إلي القائمة", "Index")
</div>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PoorID, "اسم الحالة", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.DropDownList("PoorID", null, htmlAttributes: new { @class = "selectpicker show-tick form-control", @data_live_search = true })
                @Html.ValidationMessageFor(model => model.PoorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Income, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.Income, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Income, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IncomeSource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.IncomeSource, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncomeSource, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestCase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.DropDownListFor(model => model.RequestCase, Model.RequestStatusList, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequestCase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestReceiver, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.RequestReceiver, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestReceiver, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestFollowHolder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.RequestFollowHolder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestFollowHolder, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SponsorID, "اسم الكفيل الحالي", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.DropDownList("SponsorID", null, htmlAttributes: new { @class = "selectpicker show-tick form-control", @data_live_search = true })
                @Html.ValidationMessageFor(model => model.SponsorID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethodType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.DropDownListFor(model => model.PaymentMethodType, Model.PaymentPlans, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentMethodType, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.WaseetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.WaseetName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaseetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WaseetPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.WaseetPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WaseetPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SposorChanged, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="col-md-5 col-md-offset-1box">
                    @Html.EditorFor(model => model.SponsorChanged)
                    @Html.ValidationMessageFor(model => model.SposorChanged, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReasonOfChange, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.ReasonOfChange, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReasonOfChange, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OldSponsorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.OldSponsorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldSponsorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewSponsorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.NewSponsorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewSponsorName, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.SponsorshipStopped, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="col-md-5 col-md-offset-1box">
                    @Html.EditorFor(model => model.SponsorshipStopped)
                    @Html.ValidationMessageFor(model => model.IsStopped, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StopDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.StopDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StopDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StopReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.StopReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StopReason, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.RefuseReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.EditorFor(model => model.RefuseReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RefuseReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestRejected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="col-md-5 col-md-offset-1box">
                    @Html.EditorFor(model => model.RequestRejected)
                    @Html.ValidationMessageFor(model => model.IsRefused, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        

        
        @*<div class="form-group">
            @Html.LabelFor(model => model.VolunteerID, "مدخل البيانات", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5 col-md-offset-1">
                @Html.DropDownList("VolunteerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VolunteerID, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5 col-md-offset-1">
                <input type="submit" value="إنشاء" class="btn btn-default" />
            </div>
        </div>
    </div>
}


